public final class de.fraunhofer.iem.reflection.TypicalExample extends java.lang.Object
{
    private int publicField;

    public void <init>()
    {
        de.fraunhofer.iem.reflection.TypicalExample this;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<de.fraunhofer.iem.reflection.TypicalExample: int publicField> = 20;

        return;
    }

    public final int getPublicField()
    {
        int $stack1;
        de.fraunhofer.iem.reflection.TypicalExample this;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        $stack1 = this.<de.fraunhofer.iem.reflection.TypicalExample: int publicField>;

        return $stack1;
    }

    public final void setPublicField(int)
    {
        int <set-?>;
        de.fraunhofer.iem.reflection.TypicalExample this;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        <set-?> := @parameter0: int;

        this.<de.fraunhofer.iem.reflection.TypicalExample: int publicField> = <set-?>;

        return;
    }

    public final void publicMethod()
    {
        java.io.PrintStream $stack2;
        de.fraunhofer.iem.reflection.TypicalExample this;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        $stack2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack2.<java.io.PrintStream: void println(java.lang.Object)>("This is a method with the name publicMethod");

        return;
    }

    public final void propertyAccess(kotlin.reflect.KClass)
    {
        java.lang.Object[] $stack29, l6;
        kotlin.reflect.KClass clz;
        java.lang.Integer $stack25;
        java.lang.String $stack11;
        boolean $stack9, $stack17;
        java.io.PrintStream $stack12, $stack16, $stack20;
        java.util.Iterator $stack8;
        java.util.Collection $stack7;
        kotlin.reflect.KMutableProperty $stack22;
        kotlin.reflect.KProperty1$Getter $stack14, $stack18;
        kotlin.reflect.KMutableProperty$Setter $stack23;
        de.fraunhofer.iem.reflection.TypicalExample this;
        kotlin.reflect.KProperty1 property;
        java.lang.Object $stack10, $stack13, $stack15, $stack19;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        clz := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(clz, "clz");

        $stack7 = staticinvoke <kotlin.reflect.full.KClasses: java.util.Collection getMemberProperties(kotlin.reflect.KClass)>(clz);

        $stack8 = interfaceinvoke $stack7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke $stack8.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke $stack8.<java.util.Iterator: java.lang.Object next()>();

        property = (kotlin.reflect.KProperty1) $stack10;

        $stack11 = interfaceinvoke property.<kotlin.reflect.KProperty1: java.lang.String getName()>();

        $stack12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack12.<java.io.PrintStream: void println(java.lang.Object)>($stack11);

        $stack13 = staticinvoke <kotlin.reflect.full.KClasses: java.lang.Object createInstance(kotlin.reflect.KClass)>(clz);

        $stack14 = interfaceinvoke property.<kotlin.reflect.KProperty1: kotlin.reflect.KProperty1$Getter getGetter()>();

        l6 = newarray (java.lang.Object)[1];

        l6[0] = $stack13;

        $stack15 = interfaceinvoke $stack14.<kotlin.reflect.KProperty1$Getter: java.lang.Object call(java.lang.Object[])>(l6);

        $stack16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack16.<java.io.PrintStream: void println(java.lang.Object)>($stack15);

        $stack17 = property instanceof kotlin.reflect.KMutableProperty;

        if $stack17 == 0 goto label2;

        $stack22 = (kotlin.reflect.KMutableProperty) property;

        $stack23 = interfaceinvoke $stack22.<kotlin.reflect.KMutableProperty: kotlin.reflect.KMutableProperty$Setter getSetter()>();

        l6 = newarray (java.lang.Object)[2];

        l6[0] = $stack13;

        $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        l6[1] = $stack25;

        interfaceinvoke $stack23.<kotlin.reflect.KMutableProperty$Setter: java.lang.Object call(java.lang.Object[])>(l6);

     label2:
        $stack18 = interfaceinvoke property.<kotlin.reflect.KProperty1: kotlin.reflect.KProperty1$Getter getGetter()>();

        $stack29 = newarray (java.lang.Object)[1];

        $stack29[0] = $stack13;

        $stack19 = interfaceinvoke $stack18.<kotlin.reflect.KProperty1$Getter: java.lang.Object call(java.lang.Object[])>($stack29);

        $stack20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack20.<java.io.PrintStream: void println(java.lang.Object)>($stack19);

        goto label1;

     label3:
        return;
    }

    public final void directPropertyAccess()
    {
        de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$3 $stack12;
        de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$4 $stack17;
        java.lang.Object[] l2;
        kotlin.reflect.KClass $stack3;
        java.lang.Integer $stack15;
        de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$2 $stack6;
        kotlin.reflect.KMutableProperty1$Setter $stack13;
        int $stack10, $stack21;
        java.lang.Number $stack9, $stack20;
        java.io.PrintStream $stack5, $stack11, $stack22;
        de.fraunhofer.iem.reflection.TypicalExample ob, this;
        kotlin.reflect.KProperty1$Getter $stack7, $stack18;
        java.lang.Object $stack4, $stack8, $stack19;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        $stack3 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lde/fraunhofer/iem/reflection/TypicalExample;");

        $stack4 = staticinvoke <kotlin.reflect.full.KClasses: java.lang.Object createInstance(kotlin.reflect.KClass)>($stack3);

        ob = (de.fraunhofer.iem.reflection.TypicalExample) $stack4;

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.Object)>("publicField");

        $stack6 = <de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$2: de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$2 INSTANCE>;

        $stack7 = virtualinvoke $stack6.<de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$2: kotlin.reflect.KProperty1$Getter getGetter()>();

        l2 = newarray (java.lang.Object)[1];

        l2[0] = ob;

        $stack8 = interfaceinvoke $stack7.<kotlin.reflect.KProperty1$Getter: java.lang.Object call(java.lang.Object[])>(l2);

        $stack9 = (java.lang.Number) $stack8;

        $stack10 = virtualinvoke $stack9.<java.lang.Number: int intValue()>();

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack11.<java.io.PrintStream: void println(int)>($stack10);

        $stack12 = <de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$3: de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$3 INSTANCE>;

        $stack13 = virtualinvoke $stack12.<de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$3: kotlin.reflect.KMutableProperty1$Setter getSetter()>();

        l2 = newarray (java.lang.Object)[2];

        l2[0] = ob;

        $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        l2[1] = $stack15;

        interfaceinvoke $stack13.<kotlin.reflect.KMutableProperty1$Setter: java.lang.Object call(java.lang.Object[])>(l2);

        $stack17 = <de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$4: de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$4 INSTANCE>;

        $stack18 = virtualinvoke $stack17.<de.fraunhofer.iem.reflection.TypicalExample$directPropertyAccess$4: kotlin.reflect.KProperty1$Getter getGetter()>();

        l2 = newarray (java.lang.Object)[1];

        l2[0] = ob;

        $stack19 = interfaceinvoke $stack18.<kotlin.reflect.KProperty1$Getter: java.lang.Object call(java.lang.Object[])>(l2);

        $stack20 = (java.lang.Number) $stack19;

        $stack21 = virtualinvoke $stack20.<java.lang.Number: int intValue()>();

        $stack22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack22.<java.io.PrintStream: void println(int)>($stack21);

        return;
    }

    public final void methodAccess(kotlin.reflect.KClass)
    {
        java.io.PrintStream $stack15;
        java.lang.Object[] l6;
        kotlin.reflect.KClass clz;
        java.util.Iterator $stack8;
        java.util.Collection $stack7;
        de.fraunhofer.iem.reflection.TypicalExample this;
        kotlin.reflect.KFunction method;
        java.lang.Object $stack10, $stack16;
        java.lang.String $stack11, $stack14;
        boolean $stack12, $stack9;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        clz := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(clz, "clz");

        $stack7 = staticinvoke <kotlin.reflect.full.KClasses: java.util.Collection getMemberFunctions(kotlin.reflect.KClass)>(clz);

        $stack8 = interfaceinvoke $stack7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke $stack8.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label2;

        $stack10 = interfaceinvoke $stack8.<java.util.Iterator: java.lang.Object next()>();

        method = (kotlin.reflect.KFunction) $stack10;

        $stack11 = interfaceinvoke method.<kotlin.reflect.KFunction: java.lang.String getName()>();

        $stack12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($stack11, "publicMethod");

        if $stack12 == 0 goto label1;

        $stack14 = interfaceinvoke method.<kotlin.reflect.KFunction: java.lang.String getName()>();

        $stack15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.Object)>($stack14);

        $stack16 = staticinvoke <kotlin.reflect.full.KClasses: java.lang.Object createInstance(kotlin.reflect.KClass)>(clz);

        l6 = newarray (java.lang.Object)[1];

        l6[0] = $stack16;

        interfaceinvoke method.<kotlin.reflect.KFunction: java.lang.Object call(java.lang.Object[])>(l6);

        goto label1;

     label2:
        return;
    }

    public final void directMethodAccess()
    {
        java.io.PrintStream $stack5;
        de.fraunhofer.iem.reflection.TypicalExample ob, this;
        java.lang.Object[] l2;
        kotlin.reflect.KClass $stack3;
        de.fraunhofer.iem.reflection.TypicalExample$directMethodAccess$2 $stack6;
        java.lang.Object $stack4;

        this := @this: de.fraunhofer.iem.reflection.TypicalExample;

        $stack3 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lde/fraunhofer/iem/reflection/TypicalExample;");

        $stack4 = staticinvoke <kotlin.reflect.full.KClasses: java.lang.Object createInstance(kotlin.reflect.KClass)>($stack3);

        ob = (de.fraunhofer.iem.reflection.TypicalExample) $stack4;

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.Object)>("publicMethod");

        $stack6 = <de.fraunhofer.iem.reflection.TypicalExample$directMethodAccess$2: de.fraunhofer.iem.reflection.TypicalExample$directMethodAccess$2 INSTANCE>;

        l2 = newarray (java.lang.Object)[1];

        l2[0] = ob;

        virtualinvoke $stack6.<de.fraunhofer.iem.reflection.TypicalExample$directMethodAccess$2: java.lang.Object call(java.lang.Object[])>(l2);

        return;
    }
}
